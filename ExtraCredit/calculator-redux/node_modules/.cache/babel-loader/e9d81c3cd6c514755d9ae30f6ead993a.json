{"ast":null,"code":"const initialState = {\n  total: 0,\n  history: [0]\n};\nexport default function calculate() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD\":\n      const newAddTotal = state.total + action.value;\n      return { ...state,\n        total: newAddTotal,\n        history: [newAddTotal, ...state.history]\n      };\n    // return state + action.value;\n\n    case \"SUBTRACT\":\n      const newSubtractTotal = state.total - action.value;\n      return { ...state,\n        total: newSubtractTotal,\n        history: [newSubtractTotal, ...state.history]\n      };\n    // return state - action.value;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/cindychen/Documents/NEU/Course_Material/cs5610_react_apps/calculator-redux/src/components/calculateReducer.js"],"names":["initialState","total","history","calculate","state","action","type","newAddTotal","value","newSubtractTotal"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,OAAO,EAAG,CAAC,CAAD;AAFS,CAArB;AAKA,eAAe,SAASC,SAAT,GAAiD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,KAAL;AACE,YAAMC,WAAW,GAAGH,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACG,KAAzC;AACA,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,KAAK,EAAEM,WAFF;AAGLL,QAAAA,OAAO,EAAE,CAACK,WAAD,EAAc,GAAGH,KAAK,CAACF,OAAvB;AAHJ,OAAP;AAKA;;AACF,SAAK,UAAL;AACE,YAAMO,gBAAgB,GAAGL,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACG,KAA9C;AACA,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,KAAK,EAAEQ,gBAFF;AAGLP,QAAAA,OAAO,EAAE,CAACO,gBAAD,EAAmB,GAAGL,KAAK,CAACF,OAA5B;AAHJ,OAAP;AAKA;;AACF;AACE,aAAOE,KAAP;AAlBJ;AAoBD","sourcesContent":["const initialState = {\n  total: 0,\n  history : [0]\n};\n\nexport default function calculate(state = initialState, action) {\n  switch(action.type) {\n    case \"ADD\":\n      const newAddTotal = state.total + action.value;\n      return {\n        ...state,\n        total: newAddTotal,\n        history: [newAddTotal, ...state.history ]\n      }\n      // return state + action.value;\n    case \"SUBTRACT\":\n      const newSubtractTotal = state.total - action.value;\n      return {\n        ...state,\n        total: newSubtractTotal,\n        history: [newSubtractTotal, ...state.history, ]\n      }\n      // return state - action.value;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}