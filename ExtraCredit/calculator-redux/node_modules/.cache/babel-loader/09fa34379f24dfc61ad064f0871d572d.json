{"ast":null,"code":"var _jsxFileName = \"/Users/cindychen/Documents/NEU/Course_Material/cs5610_react_apps/calculator-redux/src/components/counterInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport addSum from \"./sumAction\"; // class CounterInput extends React.Component {\n//   render() {\n//     let input;\n//     return (\n//       <div>\n//         <input\n//           onChange={(event) => (input = parseInt(event.target.value))}\n//           type={\"number\"}\n//         />\n//         <button onClick={() => this.props.onClick(input)}>{\"Add\"}</button>\n//       </div>\n//     );\n//   }\n// }\n// // mapDispatchToProps\n// // dispatch is a function that will emit an action to the store\n// // notice that it also accepts props (i.e., React Props that you\n// // would provide to the Component)\n// let mapDispatchToProps = function (dispatch, props) {\n//   return {\n//     onClick: (val) => {\n//       dispatch(addSum(val));\n//     },\n//   };\n// };\n// // this guy isn't used here, but just reminding you of it's existence!\n// function mapStateToProps(state, props) {\n//   return {};\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(CounterInput);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CounterInput(props) {\n  _s();\n\n  let input;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => input = parseInt(event.target.value),\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(addSum, input),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CounterInput, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CounterInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterInput\");","map":{"version":3,"sources":["/Users/cindychen/Documents/NEU/Course_Material/cs5610_react_apps/calculator-redux/src/components/counterInput.js"],"names":["React","useDispatch","addSum","CounterInput","props","input","dispatch","event","parseInt","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AAIA,eAAe,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,MAAIC,KAAJ;AAEA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,QAAQ,EAAGM,KAAD,IAAYF,KAAK,GAAGG,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CADxC;AAEE,MAAA,IAAI,EAAE;AAFR;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACJ,MAAD,EAASG,KAAT,CAA/B;AAAA,gBAAiD;AAAjD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAfuBF,Y;UAGLF,W;;;KAHKE,Y","sourcesContent":["import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport addSum from \"./sumAction\";\n\n// class CounterInput extends React.Component {\n//   render() {\n//     let input;\n\n//     return (\n//       <div>\n//         <input\n//           onChange={(event) => (input = parseInt(event.target.value))}\n//           type={\"number\"}\n//         />\n//         <button onClick={() => this.props.onClick(input)}>{\"Add\"}</button>\n//       </div>\n//     );\n//   }\n// }\n\n// // mapDispatchToProps\n// // dispatch is a function that will emit an action to the store\n// // notice that it also accepts props (i.e., React Props that you\n// // would provide to the Component)\n// let mapDispatchToProps = function (dispatch, props) {\n//   return {\n//     onClick: (val) => {\n//       dispatch(addSum(val));\n//     },\n//   };\n// };\n\n// // this guy isn't used here, but just reminding you of it's existence!\n// function mapStateToProps(state, props) {\n//   return {};\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(CounterInput);\n\n\n\nexport default function CounterInput (props) {\n  let input;\n\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <input\n        onChange={(event) => (input = parseInt(event.target.value))}\n        type={\"number\"}\n      />\n      <button onClick={() => dispatch(addSum, input)}>{\"Add\"}</button>\n    </div>\n  );\n\n}"]},"metadata":{},"sourceType":"module"}