{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from 'react-redux';\nimport addSum from \"./sumAction\"; // class CounterShower extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>{this.props.total}</h1>\n//       </div>\n//     );\n//   }\n// }\n// // useDispatch\n// let mapDispatchToProps = function (dispatch, props) {\n//   return {};\n// };\n// // this guy isn't used here, but it's needed as the first argument in connect\n// // I guess you could also pass undefined...\n// // useSelector\n// function mapStateToProps(state, props) {\n//   return {\n//     total: state.sum,\n//   };\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(CounterShower);\n\nexport default function CounterShower(props) {\n  _s();\n\n  const sum = useSelector(state => state.sum);\n}\n\n_s(CounterShower, \"N7x3zJHnZ6PEJWPLi1IeumrHpzs=\", false, function () {\n  return [useSelector];\n});\n\n_c = CounterShower;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterShower\");","map":{"version":3,"sources":["/Users/cindychen/Documents/NEU/Course_Material/cs5610_react_apps/calculator-redux/src/components/counterShower.js"],"names":["React","useSelector","addSum","CounterShower","props","sum","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAMC,GAAG,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,GAAhB,CAAvB;AAID;;GALuBF,a;UACVF,W;;;KADUE,a","sourcesContent":["import React from \"react\";\nimport {useSelector} from 'react-redux';\nimport addSum from \"./sumAction\";\n\n\n\n\n// class CounterShower extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>{this.props.total}</h1>\n//       </div>\n//     );\n//   }\n// }\n\n\n// // useDispatch\n// let mapDispatchToProps = function (dispatch, props) {\n//   return {};\n// };\n// // this guy isn't used here, but it's needed as the first argument in connect\n// // I guess you could also pass undefined...\n\n\n// // useSelector\n// function mapStateToProps(state, props) {\n//   return {\n//     total: state.sum,\n//   };\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(CounterShower);\n\nexport default function CounterShower(props) {\n  const sum = useSelector(state => state.sum);\n  \n\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}